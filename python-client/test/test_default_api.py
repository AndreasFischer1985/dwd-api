"""
    Deutscher Wetterdienst: API

    API des Deutschen Wetterdienstes (DWD) aus der DWD App. <br><br> Neben unterschiedlichen Wetterwarnungen (s.u.) lassen sich unter [/dwd.api.proxy.bund.dev/v30/stationOverviewExtended](/dwd.api.proxy.bund.dev/v30/stationOverviewExtended) nach Angabe des Parameters *stationIDs* (z.B. 'G005') auch die Wetterdaten ausgewählter Wetterstationen anfordern (wobei die sog. 'Stationskennung' des DWD anzugeben ist). <br><br> Unter [https://opendata.dwd.de/](https://opendata.dwd.de/) bietet der DWD darüber hinaus auch aktuelle und historische Daten zu diversen Wetterdaten zum Download an (vgl. hierzu die offizielle Dokumentation [hier](https://opendata.dwd.de/climate_environment/CDC/Readme_intro_CDC_ftp.pdf)). In diesem Zusammenhang erwähnenswert ist auch eine weitere offizielle Liste aller Wetterstationen (ohne Stationskennung aber mit sog. 'Stations_id') [hier](https://opendata.dwd.de/climate_environment/CDC/observations_germany/climate/daily/kl/recent/KL_Tageswerte_Beschreibung_Stationen.txt).  # noqa: E501

    The version of the OpenAPI document: 1.2.0
    Contact: kontakt@bund.dev
    Generated by: https://openapi-generator.tech
"""


import unittest

from deutschland.dwd.api.default_api import DefaultApi  # noqa: E501

from deutschland import dwd


class TestDefaultApi(unittest.TestCase):
    """DefaultApi unit test stubs"""

    def setUp(self):
        self.api = DefaultApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_alpen_forecast_text_dwms_json_get(self):
        """Test case for alpen_forecast_text_dwms_json_get

        Alpen Wettervorhersage als Text  # noqa: E501
        """
        pass

    def test_crowd_meldungen_overview_v2_json_get(self):
        """Test case for crowd_meldungen_overview_v2_json_get

        DWD Crowdwettermeldungen  # noqa: E501
        """
        pass

    def test_gemeinde_warnings_v2_en_json_get(self):
        """Test case for gemeinde_warnings_v2_en_json_get

        Gemeinde Unwetterwarnungen (Englisch)  # noqa: E501
        """
        pass

    def test_gemeinde_warnings_v2_json_get(self):
        """Test case for gemeinde_warnings_v2_json_get

        Gemeinde Unwetterwarnungen (Deutsch)  # noqa: E501
        """
        pass

    def test_sea_warning_text_json_get(self):
        """Test case for sea_warning_text_json_get

        Hochsee Unwetterwarnungen als Text  # noqa: E501
        """
        pass

    def test_station_overview_extended_get(self):
        """Test case for station_overview_extended_get

        Wetterstation Daten  # noqa: E501
        """
        pass

    def test_warnings_coast_en_json_get(self):
        """Test case for warnings_coast_en_json_get

        Küsten Unwetterwarnungen (englisch)  # noqa: E501
        """
        pass

    def test_warnings_coast_json_get(self):
        """Test case for warnings_coast_json_get

        Küsten Unwetterwarnungen (deutsch)  # noqa: E501
        """
        pass

    def test_warnings_lawine_json_get(self):
        """Test case for warnings_lawine_json_get

        Alpen Wettervorhersage als Text  # noqa: E501
        """
        pass

    def test_warnings_nowcast_en_json_get(self):
        """Test case for warnings_nowcast_en_json_get

        Nowcast Warnungen (englisch)  # noqa: E501
        """
        pass

    def test_warnings_nowcast_json_get(self):
        """Test case for warnings_nowcast_json_get

        Nowcast Warnungen (deutsch)  # noqa: E501
        """
        pass


if __name__ == "__main__":
    unittest.main()
